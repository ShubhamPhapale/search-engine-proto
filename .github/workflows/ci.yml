name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test search engine functionality
      run: |
        python main.py test
    
    - name: Test web application
      run: |
        # Start server in background and test API endpoints
        python main.py server --no-debug --port 5001 &
        sleep 5
        curl -f http://localhost:5001/ || exit 1
        curl -f "http://localhost:5001/api/search?q=test" || exit 1
        pkill -f "python main.py server"

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t pysearch:latest .
    
    - name: Test Docker container
      run: |
        docker run --rm -d -p 8080:8080 --name test-container pysearch:latest
        sleep 10
        curl -f http://localhost:8080/ || exit 1
        docker stop test-container
